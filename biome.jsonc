{
  "$schema": "https://biomejs.dev/schemas/2.0.0/schema.json",
  "vcs": {
    "enabled": true,
    "clientKind": "git",
    "useIgnoreFile": true,
    "defaultBranch": "main"
  },
  "files": {
    "includes": [
      "**",
      "!**/.next",
      "!**/mockServiceWorker.js",
      "!**/*-props.json",
      "!**/.tmp",
      "!**/site/src/components/css-display/**/*.json",
      "!**/site/public/search-data.json"
    ]
  },
  "assist": { "actions": { "source": { "organizeImports": "on" } } },
  "formatter": {
    "enabled": true,
    "indentStyle": "space"
  },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": true,
      "style": {
        // Changed to warn because we have a lot of non-null assertions.
        "noNonNullAssertion": "warn",
        "useAsConstAssertion": "error",
        "useDefaultParameterLast": "error",
        "useEnumInitializers": "error",
        "useSelfClosingElements": "error",
        "useSingleVarDeclarator": "error",
        "noUnusedTemplateLiteral": "error",
        "useNumberNamespace": "error",
        "noInferrableTypes": "error",
        "noUselessElse": "error"
      },
      "complexity": {
        // Changed to warn because it is useful to keep this in mind, but it doesn't need to be a strict requirement.
        "noForEach": "warn"
      },
      "a11y": {
        // Disabled because autofocus is necessary in some cases.
        "noAutofocus": "off",
        // Disabled because we write a lot of custom components.
        "noNoninteractiveElementToInteractiveRole": "off",
        "noStaticElementInteractions": "off",
        "useFocusableInteractive": "off",
        "noNoninteractiveTabindex": "off",
        "useAriaPropsSupportedByRole": "warn",
        "useKeyWithClickEvents": "warn",
        // Disabled until biome doesn't flag hidden SVGs.
        "noSvgWithoutTitle": "off",
        // Changed to warn because biome has some false positives.
        "useAriaPropsForRole": "warn",
        "useSemanticElements": "off"
      },
      "correctness": {
        "noUnusedImports": "error",
        "useExhaustiveDependencies": {
          "level": "warn",
          "options": {
            "hooks": [
              {
                "name": "useIsomorphicLayoutEffect",
                "closureIndex": 0,
                "dependenciesIndex": 1
              },
              {
                "name": "useControlled",
                "stableResult": [1]
              }
            ]
          }
        }
      },
      "suspicious": {
        // Changed to warn because it is useful to keep this in mind, but it doesn't need to be a strict requirement.
        "noArrayIndexKey": "warn",
        // Changed to warn because it is useful to keep this in mind, but it doesn't need to be a strict requirement.
        "noExplicitAny": "warn"
      }
    }
  },
  "css": {
    "formatter": {
      "lineWidth": 200
    },
    "parser": {
      "cssModules": true
    }
  },
  "overrides": [
    {
      // Disable some rules for tests and stories, because they are not production code.
      "includes": ["**/__tests__/**", "**/stories/**"],
      "linter": {
        "rules": {
          "a11y": {
            "useButtonType": "off"
          },
          "complexity": {
            "noForEach": "off"
          },
          "suspicious": {
            "noImplicitAnyLet": "off"
          },
          "nursery": {
            "useUniqueElementIds": "warn"
          }
        }
      }
    },
    {
      // Disable some rules for legacy code, because it is not worth fixing.
      "includes": [
        "**/lab/src/responsive/**",
        "**/packages/data-grid/**",
        "**/lab/src/common-hooks/**"
      ],
      "linter": {
        "rules": {
          "style": {
            "noParameterAssign": "off"
          },
          "suspicious": {
            "noAssignInExpressions": "off"
          }
        }
      }
    },
    {
      // Disable noExplicitAny for utils, because any is useful in some cases.
      "includes": ["**/utils/**"],
      "linter": {
        "rules": {
          "suspicious": {
            "noExplicitAny": "off"
          }
        }
      }
    },
    {
      // Disable noArrayIndexKey for layout examples because array indexes are useful in this case.
      "includes": [
        "**/packages/**/*/stories/**/*-layout/**",
        "**/site/src/examples/**/*-layout/**"
      ],
      "linter": {
        "rules": {
          "suspicious": {
            "noArrayIndexKey": "off"
          }
        }
      }
    },
    {
      // Disable noShadowRestrictedNames for examples and stories because it is useful to shadow restricted names for example names.
      "includes": ["**/site/src/examples/**", "**/packages/**/*/stories/**"],
      "linter": {
        "rules": {
          "suspicious": {
            "noShadowRestrictedNames": "off"
          }
        }
      }
    },
    {
      "includes": [
        "**/packages/core/src/**",
        "!**/packages/core/src/__tests__/**"
      ],
      "linter": {
        "rules": {
          "style": {
            "noRestrictedImports": {
              "level": "error",
              "options": {
                "paths": {
                  "@salt-ds/core": "Using relative import instead of import from the package itself"
                }
              }
            }
          }
        }
      }
    },
    {
      "includes": ["**/tooling/**"],
      "linter": {
        "rules": {
          "correctness": {
            "noUnusedFunctionParameters": "warn"
          }
        }
      }
    },
    {
      "includes": [
        "**/packages/lab/src/**",
        "!**/packages/lab/src/__tests__/**"
      ],
      "linter": {
        "rules": {
          "nursery": {},
          "style": {
            "noRestrictedImports": {
              "level": "error",
              "options": {
                "paths": {
                  "@salt-ds/lab": "Using relative import instead of import from the package itself"
                }
              }
            }
          }
        }
      }
    }
  ]
}
