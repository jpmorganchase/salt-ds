var css_248z = "/* Default variables applied to the root element */\n.saltStackLayout {\n  --stackLayout-separator-weight: var(--salt-size-fixed-100, 1);\n}\n\n.saltStackLayout-separator > * {\n  position: relative;\n}\n.saltStackLayout-separator > *:not(:last-child)::after {\n  position: absolute;\n  display: block;\n  content: \"\";\n  background-color: var(--salt-separable-secondary-borderColor);\n}\n\n/*\n * Seperator offset based on seperator alignment\n * var(--stackLayout-separator-weight) is used to take into account the thickness of the seperator,so even at higher weights it will be at the start/center/end\n*/\n.saltStackLayout-separator-start {\n  --stackLayout-seperator-offset: calc(var(--stackLayout-separator-weight) * -1);\n}\n.saltStackLayout-separator-center {\n  --stackLayout-seperator-offset: calc((var(--stackLayout-gap) * -0.5) + (var(--stackLayout-separator-weight) * -0.5));\n}\n.saltStackLayout-separator-end {\n  --stackLayout-seperator-offset: calc(var(--stackLayout-gap) * -1);\n}\n\n/* When alignment is 'row' and we have seperators (last child doesn't need a seperator) */\n.saltStackLayout-row.saltStackLayout-separator > *:not(:last-child)::after {\n  height: 100%;\n  width: var(--stackLayout-separator-weight);\n  right: var(--stackLayout-seperator-offset);\n  top: 0;\n}\n\n/* When alignment is 'column' and we have seperators (last child doesn't need a seperator) */\n.saltStackLayout-column.saltStackLayout-separator > *:not(:last-child)::after {\n  width: 100%;\n  height: var(--stackLayout-separator-weight);\n  bottom: var(--stackLayout-seperator-offset);\n  left: 0;\n}\n";
export default css_248z;
export var stylesheet="/* Default variables applied to the root element */\n.saltStackLayout {\n  --stackLayout-separator-weight: var(--salt-size-fixed-100, 1);\n}\n\n.saltStackLayout-separator > * {\n  position: relative;\n}\n.saltStackLayout-separator > *:not(:last-child)::after {\n  position: absolute;\n  display: block;\n  content: \"\";\n  background-color: var(--salt-separable-secondary-borderColor);\n}\n\n/*\n * Seperator offset based on seperator alignment\n * var(--stackLayout-separator-weight) is used to take into account the thickness of the seperator,so even at higher weights it will be at the start/center/end\n*/\n.saltStackLayout-separator-start {\n  --stackLayout-seperator-offset: calc(var(--stackLayout-separator-weight) * -1);\n}\n.saltStackLayout-separator-center {\n  --stackLayout-seperator-offset: calc((var(--stackLayout-gap) * -0.5) + (var(--stackLayout-separator-weight) * -0.5));\n}\n.saltStackLayout-separator-end {\n  --stackLayout-seperator-offset: calc(var(--stackLayout-gap) * -1);\n}\n\n/* When alignment is 'row' and we have seperators (last child doesn't need a seperator) */\n.saltStackLayout-row.saltStackLayout-separator > *:not(:last-child)::after {\n  height: 100%;\n  width: var(--stackLayout-separator-weight);\n  right: var(--stackLayout-seperator-offset);\n  top: 0;\n}\n\n/* When alignment is 'column' and we have seperators (last child doesn't need a seperator) */\n.saltStackLayout-column.saltStackLayout-separator > *:not(:last-child)::after {\n  width: 100%;\n  height: var(--stackLayout-separator-weight);\n  bottom: var(--stackLayout-seperator-offset);\n  left: 0;\n}\n";

/*# sourceMappingURL=StackLayout-CX3P2Hjd.css.map*/