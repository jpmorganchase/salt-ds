/* Default variables applied to the root element */
.saltStackLayout {
  --stackLayout-separator-weight: var(--salt-size-border, 1);
}

.saltStackLayout-separator > * {
  position: relative;
}
.saltStackLayout-separator > *:not(:last-child)::after {
  position: absolute;
  display: block;
  content: "";
  background-color: var(--salt-separable-secondary-borderColor);
}

/*
 * Seperator offset based on seperator alignment
 * var(--stackLayout-separator-weight) is used to take into account the thickness of the seperator,so even at higher weights it will be at the start/center/end
*/
.saltStackLayout-separator-start {
  --stackLayout-seperator-offset: calc(var(--stackLayout-separator-weight) * -1);
}
.saltStackLayout-separator-center {
  --stackLayout-seperator-offset: calc((var(--stackLayout-gap) * -0.5) + (var(--stackLayout-separator-weight) * -0.5));
}
.saltStackLayout-separator-end {
  --stackLayout-seperator-offset: calc(var(--stackLayout-gap) * -1);
}

/* When alignment is 'row' and we have seperators (last child doesn't need a seperator) */
.saltStackLayout-row.saltStackLayout-separator > *:not(:last-child)::after {
  height: 100%;
  width: var(--stackLayout-separator-weight);
  right: var(--stackLayout-seperator-offset);
  top: 0;
}

/* When alignment is 'column' and we have seperators (last child doesn't need a seperator) */
.saltStackLayout-column.saltStackLayout-separator > *:not(:last-child)::after {
  width: 100%;
  height: var(--stackLayout-separator-weight);
  bottom: var(--stackLayout-seperator-offset);
  left: 0;
}
