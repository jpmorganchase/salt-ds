/* Styles applied to root component */
.uitk-density-high {
  --checkbox-size: 12px;
}

.uitk-density-medium {
  --checkbox-size: 14px;
}

.uitk-density-low {
  --checkbox-size: 16px;
}

.uitk-density-touch {
  --checkbox-size: 18px;
}

.uitk-density-high {
  --checkbox-density-bar-y: 5px;
  --checkbox-density-bar-height: 3px;
}

.uitkCheckboxIcon {
  --checkbox-borderWidth: var(--uitk-selectable-borderWidth);
  --checkbox-tick-fill: var(--uitkCheckbox-icon-tick-color, var(--uitk-selectable-primary-foreground-selected));
  --checkbox-viewbox: 14px; /* do not change, matches value in svg viewBox */
  --checkbox-height: calc(var(--checkbox-viewbox) - var(--checkbox-borderWidth));
  --checkbox-width: calc(var(--checkbox-viewbox) - var(--checkbox-borderWidth));
  --checkbox-box-offset: calc(var(--checkbox-borderWidth) / 2);

  fill: var(--uitkCheckbox-icon-fill, var(--uitk-selectable-background));
  height: var(--uitkCheckbox-icon-size, var(--checkbox-size));
  stroke: var(--uitkCheckbox-icon-stroke, var(--uitk-selectable-borderColor));
  stroke-width: var(--uitkCheckbox-icon-strokeWidth, var(--uitk-selectable-borderWidth));
  width: var(--uitkCheckbox-icon-size, var(--checkbox-size));
}

/* Styles applied to root component on hover */
.uitkCheckbox:not(.uitkCheckbox-disabled):hover .uitkCheckboxIcon,
.uitkCheckboxIcon:not(.uitkCheckboxIcon-disabled):hover {
  stroke: var(--uitkCheckbox-icon-stroke-hover, var(--uitk-selectable-borderColor-hover));
  stroke-width: var(--uitkCheckbox-icon-strokeWidth-hover, var(--uitk-selectable-borderWidth-hover));
}

/* Styles applied if `disabled={true}` */
.uitkCheckboxIcon-disabled {
  stroke: var(--uitkCheckbox-icon-stroke-disabled, var(--uitk-selectable-borderColor-disabled));
  stroke-width: var(--uitkCheckbox-icon-strokeWidth-disabled, var(--uitk-selectable-borderWidth));
}

/* Styles applied if `checked={true}` */
.uitkCheckboxIcon-checked {
  --checkbox-borderWidth: var(--uitkCheckbox-icon-borderWidth-checked, 0px);

  fill: var(--uitkCheckbox-icon-fill-checked, var(--uitk-selectable-borderColor-selected));
}

/* Styles applied if `checked={true}` and `disabled={true}` */
.uitkCheckboxIcon-checked.uitkCheckboxIcon-disabled {
  fill: var(--uitkCheckbox-icon-fill-disabled, var(--uitk-selectable-borderColor-selectedDisabled));
}

/* Styles applied to box */
.uitkCheckboxIcon-box {
  height: var(--checkbox-height);
  stroke-width: var(--checkbox-borderWidth);
  width: var(--checkbox-width);
  x: var(--checkbox-box-offset);
  y: var(--checkbox-box-offset);
}

/* Styles applied to icon if `indeterminate={true}` */
.uitkCheckboxIcon-indeterminate {
  --checkbox-tick-fill: var(--uitkCheckbox-icon-indeterminate-bar-color, var(--uitk-selectable-foreground-partial));
}

/* Styles applied if `indeterminate={true}` and `disabled={true}` */
.uitkCheckboxIcon-disabled.uitkCheckboxIcon-indeterminate {
  --checkbox-tick-fill: var(--uitkCheckbox-icon-indeterminate-bar-color-disabled, var(--uitk-selectable-foreground-partialDisabled));
}

/* Styles applied to tick */
.uitkCheckboxIcon-tick {
  fill: var(--uitkCheckbox-icon-tick-fill, var(--checkbox-tick-fill));
  stroke-width: 0;
}

/* Styles applied to tick if `indeterminate={true}` */
.uitkCheckboxIcon-indeterminate .uitkCheckboxIcon-tick {
  height: var(--uitkCheckbox-icon-indeterminate-bar-height, var(--checkbox-density-bar-height, 2px));
  y: var(--uitkCheckbox-icon-indeterminate-bar-y, var(--checkbox-density-bar-y, 6px));
}

/* Backwards compat styling for TK1 */
.uitk-light .uitkCheckbox.backwardsCompat:not(.uitkCheckbox-disabled):hover .uitkCheckboxIcon,
.uitk-light .uitkCheckbox.backwardsCompat .uitkCheckboxIcon:not(.uitkCheckboxIcon-disabled):hover {
  stroke: var(--uitk-color-blue-400);
}

.uitk-light .uitkCheckbox.backwardsCompat .uitkCheckboxIcon-checked {
  fill: var(--uitk-color-blue-500);
}

.uitk-light .uitkCheckbox.backwardsCompat .uitkCheckboxIcon-checked.uitkCheckboxIcon-disabled {
  fill: var(--uitk-color-blue-500);
}

.uitk-dark .uitkCheckbox.backwardsCompat:not(.uitkCheckbox-disabled):hover .uitkCheckboxIcon,
.uitk-dark .uitkCheckbox.backwardsCompat .uitkCheckboxIcon:not(.uitkCheckboxIcon-disabled):hover {
  stroke: var(--uitk-color-blue-300);
}

.uitk-dark .uitkCheckbox.backwardsCompat .uitkCheckboxIcon-checked {
  fill: var(--uitk-color-blue-400);
}

.uitk-dark .uitkCheckbox.backwardsCompat .uitkCheckboxIcon-checked.uitkCheckboxIcon-disabled {
  fill: var(--uitk-color-blue-400);
}
