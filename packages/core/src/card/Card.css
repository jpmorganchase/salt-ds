/**
  Deprecated Variables Notice:

  The CSS variables listed below are deprecated and should be replaced with their corresponding SaltStyleContract variables.
  This approach allows us to share contracts that manage style tokens and provide a structured way for users to implement known levels of customization.

--saltCard-borderWidth
--saltCard-padding
--saltCard-borderRadius
--saltCard-background
--saltCard-accent-color
--saltCard-boxShadow-hover
--saltCard-cursor-hover
--saltCard-boxShadow-active
--saltCard-boxShadow-disabled
--saltCard-color-disabled
--saltCard-cursor-disabled
*/

/* Styles applied to the root element */
.saltCard {
  --card-background: none;
  --card-border-color: none;
  --card-border-style: none;
  --card-border-radius: var(--salt-palette-corner, 0);
  --card-border-width: var(--salt-size-border);
  --card-box-shadow: none;
  --card-cursor: unset;
  --card-color: inherit;
  --card-outline: unset;
  --card-outline-offset: unset;
  --card-padding: var(--salt-spacing-200);
  --card-padding: var(--salt-spacing-200);
  --card-transition: box-shadow var(--salt-duration-instant) ease-in-out;

  /** Accent */
  --card-accent-background: none;
  --card-accent-top: unset;
  --card-accent-right: unset;
  --card-accent-bottom: unset;
  --card-accent-left: unset;
  --card-accent-width: unset;
  --card-accent-height: unset;

  background: var(--card-background);
  border-color: var(--card-border-color);
  border-style: var(--card-border-style);
  border-radius: var(--card-border-radius);
  border-width: var(--card-border-width);
  box-shadow: var(--card-box-shadow);
  color: var(--card-color);
  cursor: var(--card-cursor);
  outline: var(--card-outline);
  outline-offset: var(--card-outline-offset);
  padding: var(--card-padding);
  transition: var(--card-transition);

  box-sizing: border-box;
  overflow: hidden;
  position: relative;
}

/* Styles applied to create accent */
.saltCard-accent::after {
  content: "";
  position: absolute;
  background: var(--card-accent-background);
}

/* Styles applied to Card if `accent="bottom"` (default) */
.saltCard-accentBottom::after {
  --card-accent-left: calc(-1 * var(--salt-size-border));
  --card-accent-bottom: calc(-1 * var(--salt-size-border));
  --card-accent-height: var(--salt-size-bar);
  --card-accent-width: calc(100% + calc(2 * var(--salt-size-border)));
}

/* Styles applied to Card if `accent="left"` */
.saltCard-accentLeft::after {
  --card-accent-left: calc(-1 * var(--salt-size-border));
  --card-accent-top: calc(-1 * var(--salt-size-border));
  --card-accent-height: calc(100% + calc(2 * var(--salt-size-border)));
  --card-accent-width: var(--salt-size-bar);
}

/* Styles applied to Card if `accent="top"` */
.saltCard-accentTop::after {
  --card-accent-left: calc(-1 * var(--salt-size-border));
  --card-accent-top: calc(-1 * var(--salt-size-border));
  --card-accent-height: var(--salt-size-bar);
  --card-accent-width: calc(100% + calc(2 * var(--salt-size-border)));
}

/* Styles applied to Card if `accent="right"` */
.saltCard-accentRight::after {
  --card-accent-right: calc(-1 * var(--salt-size-border));
  --card-accent-top: calc(-1 * var(--salt-size-border));
  --card-accent-height: calc(100% + calc(2 * var(--salt-size-border)));
  --card-accent-width: var(--salt-size-bar);
}

.saltCard-primary {
  --card-background: var(--salt-container-primary-background);
  --card-border-color: var(--salt-container-primary-borderColor);
}

.saltCard-secondary {
  --card-background: var(--salt-container-secondary-background);
  --card-border-color: var(--salt-container-secondary-borderColor);
}

.saltCard-tertiary {
  --card-background: var(--salt-container-tertiary-background);
  --card-border-color: var(--salt-container-tertiary-borderColor);
}

/* Styles applied if `hoverable` is set */
@media (hover: hover) {
  .saltCard-hoverable:hover {
    --card-box-shadow: var(--salt-overlayable-shadow-hover);
    --card-border-color: var(--salt-actionable-accented-borderColor-hover);
  }
}

/*
 * **Deprecated:** The following styles are deprecated
 *  Use Interactable Card component instead
 *  for interactable styling
 */

/* **Deprecated:** Styles applied if `interactable={true}` */
.saltCard-interactable {
  display: block;
  transition: none;
}

/* **Deprecated:** Styles applied on hover if `interactable={true}` */
a:focus .saltCard-interactable,
.saltCard-interactable:hover {
  --card-box-shadow: var(--salt-overlayable-shadow-hover);
  --card-cursor: var(--salt-selectable-cursor-hover);
  --card-border-color: var(--salt-actionable-accented-borderColor-hover);
  position: relative;
}

/* **Deprecated:** Styles applied on active state if `interactable={true}` */
.saltCard-interactable:active {
  --card-box-shadow: var(--salt-overlayable-shadow-hover);
  --card-border-color: var(--salt-actionable-accented-borderColor-active);
  --card-outline: var(--salt-focused-outline);
  --card-outline-offset: var(--salt-focused-outlineOffset);
}

/* **Deprecated:** Styles applied on hover if `interactable={true}` and `disabled={true}` */
a:focus .saltCard-interactable.saltCard-disabled,
.saltCard-interactable.saltCard-disabled:hover,
.saltCard-interactable.saltCard-disabled:active {
  --card-box-shadow: var(--salt-overlayable-shadow);
}

/* **Deprecated:** Styles applied if `disabled={true}` */
.saltCard-disabled,
.saltCard-disabled.saltCard-interactable,
a:focus .saltCard-interactable.saltCard-disabled {
  --card-border-color: var(--salt-container-primary-borderColor-disabled);
  --card-color: var(--salt-content-primary-foreground-disabled);
  --card-cursor: var(--salt-selectable-cursor-disabled);
  --card-outline: none;
}

/* **Deprecated:** Styles applied to nested divs if `disabled={true}` */
.saltCard-disabled div {
  pointer-events: none;
}
