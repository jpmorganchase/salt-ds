/* Styles applied to the root element dependent on density */
.uitk-density-touch {
  --form-field-helper-text-margin-top: 8px;
  --form-field-activation-indicator-icon-size: 7px;
}
.uitk-density-low {
  --form-field-helper-text-margin-top: 4px;
  --form-field-activation-indicator-icon-size: 5px;
}
.uitk-density-medium {
  --form-field-helper-text-margin-top: 0px;
  --form-field-activation-indicator-icon-size: 5px;
}
.uitk-density-high {
  --form-field-helper-text-margin-top: 2px;
  --form-field-activation-indicator-icon-size: 3px;
}

/* above, if `fillWidth={true}` */
.uitk-density-touch .uitkFormField-fullWidth {
  --form-field-helper-text-margin-top: 5px;
}
.uitk-density-low .uitkFormField-fullWidth {
  --form-field-helper-text-margin-top: 5px;
}
.uitk-density-medium .uitkFormField-fullWidth {
  --form-field-helper-text-margin-top: 3px;
}
.uitk-density-high .uitkFormField-fullWidth {
  --form-field-helper-text-margin-top: 3px;
}

/* Style applied to the root element */
.uitkFormField {
  --form-field-background: var(--uitk-editable-background-medium);
  --form-field-focus-outline-color: var(--uitk-focused-outlineColor);
  --form-field-focus-outline-offset: var(--uitkFormField-focused-outline-offset, var(--uitk-focused-outlineOffset));
  --form-field-focus-outline-style: var(--uitkFormField-focused-outline-style, var(--uitk-focused-outlineStyle));
  --form-field-focus-outline-width: var(--uitkFormField-focused-outline-width, var(--uitk-focused-outlineWidth));
  --form-field-label-root-padding-left: 0;
  --form-field-label-root-padding-right: 0;

  /* Setting Helper Text API */
  --uitkFormFieldHelperText-height: 0px;

  /* Setting Form Label API */
  --uitkFormLabel-padding: 0 8px;

  /* Setting Activation Indicator API */
  --uitkFormActivationIndicator-color: var(--uitk-editable-borderColor);
  --uitkFormActivationIndicator-icon-size: var(--form-field-activation-indicator-icon-size);
}

.uitkEmphasisLow.uitkFormField {
  --form-field-background: var(--uitk-editable-background-low);
}

.uitkEmphasisHigh.uitkFormField {
  --form-field-background: var(--uitk-editable-background-high);
}

.uitkFormField {
  box-sizing: border-box;
  border: 0;
  display: inline-grid;
  font-size: var(--uitkFormField-font-size, var(--uitk-text-fontSize));
  margin: var(--uitkFormField-margin, 0);
  padding: 0;
  position: relative;
  min-width: 0;
  vertical-align: top;
  width: var(--uitkFormField-width, auto);
}

/* Class applied to the root element on hover
  Setting Activation Indicator API */
.uitkFormField:hover {
  --uitkFormActivationIndicator-color: var(--uitk-editable-borderColor-hover);
}

/* Class applied to the root element on focus 
   Setting Activation Indicator API */
.uitkFormField-focused,
.uitkFormField-lowFocused {
  --uitkFormActivationIndicator-color: var(--uitk-editable-borderColor-active);
  --uitkFormActivationIndicator-size: var(--uitk-editable-borderWidth-active);
}

/* Class applied to the root element when helper text is provided */
.uitkFormField-withHelperText {
  /* Setting Helper Text API */
  --uitkFormFieldHelperText-height: var(--uitk-text-lineHeight);
}

/* Class applied to the root element if `disabled={true}` */
.uitkFormField-disabled {
  cursor: var(--uitk-editable-cursor-disabled);

  /* Setting Helper Text API */
  --uitkFormFieldHelperText-opacity: var(--uitk-opacity-foreground);

  /* Setting Activation Indicator API */
  --uitkFormActivationIndicator-opacity: var(--uitk-opacity-foreground);
  --uitkFormActivationIndicator-icon-opacity: var(--uitk-opacity-foreground);
}

/* Class applied to the root element on warning state */
.uitkFormField.uitkFormField-warning {
  --form-field-focus-outline-color: var(--uitk-status-warning-color);

  /* Setting Activation Indicator API */
  --uitkFormActivationIndicator-color: var(--uitk-status-warning-color);
}

/* Class applied to the root element on error state */
.uitkFormField.uitkFormField-error {
  --form-field-focus-outline-color: var(--uitk-status-error-color);

  /* Setting Activation Indicator API */
  --uitkFormActivationIndicator-color: var(--uitk-status-error-color);
}

/* As above when `uitkEmphasisHigh` className passed */
.uitkEmphasisHigh.uitkFormField-error {
  --form-field-background: var(--uitk-status-error-background-high);
}

.uitkEmphasisHigh.uitkFormField-warning {
  --form-field-background: var(--uitk-status-warning-background-high);
}

/* Class applied to the root element if `labelPlacement="left"` */
.uitkFormField-labelLeft {
  --uitkFormLabel-margin-top: var(--uitk-size-unit);
  --uitkFormLabel-padding-right: calc(0.75 * var(--uitk-size-unit));
}

/* Class applied to the root element if `labelPlacement="top"` or labelPlacement omitted (default is 'top') */
.uitkFormField-labelTop {
  --form-field-label-root-padding-left: var(--uitk-size-unit);
  --form-field-label-root-padding-right: var(--uitk-size-unit);
  --form-field-label-margin-top: 0;
}

.uitkFormField > * {
  grid-column-start: 1;
  grid-column-end: 1;
}

.uitkFormLabel ~ * {
  z-index: 1;
}

.uitkFormField-labelLeft > .uitkFormLabel ~ * {
  grid-column-start: 2;
  grid-column-end: 2;
}

.uitkFormField-labelLeft {
  grid-template-columns: auto 1fr;
}

/* Class applied to the root element if `fillWidth={true}` */
.uitkFormField-fullWidth {
  width: 100%;
}

/* Class applied to the root element when control has focus` */
.uitkFormField-focused {
  outline-color: var(--form-field-focus-outline-color);
  outline-style: var(--form-field-focus-outline-style);
  outline-width: var(--form-field-focus-outline-width);
  outline-offset: var(--form-field-focus-outlineout-offset);
}

.uitkFormField-labelLeft.uitkFormField-focused {
  outline: none;
}

.uitkFormField-labelLeft.uitkFormField-focused > :is(.uitkFormField-activationIndicator, .uitkFormField-helperText, .uitkFormLabel):after {
  content: none;
}

.uitkFormField-labelLeft.uitkFormField-focused .uitkFormLabel + * {
  outline-color: var(--form-field-focus-outline-color);
  outline-style: var(--form-field-focus-outline-style);
  outline-width: var(--form-field-focus-outline-width);
  outline-offset: var(--form-field-focus-outlineout-offset);
}

.uitkFormField-labelTop {
  background: linear-gradient(to top, transparent var(--uitkFormFieldHelperText-height), var(--uitkFormField-background, var(--form-field-background)) var(--uitkFormFieldHelperText-height));
}

.uitkFormField-theme.uitkFormField-labelLeft > .uitkFormLabel ~ * {
  background: var(--uitkFormField-background, var(--form-field-background));
}

.uitkFormField-labelLeft > .uitkFormLabel ~ :not(.uitkFormFieldHelperText) {
  background: var(--uitkFormField-background, var(--form-field-background));
}

/* Class applied to the root element if `readonly={true}` */
.uitkFormField-readOnly {
}

/* Class applied to the root element if `validationState="error"` */
.uitkFormField-error {
}

/* Class applied to the root element if `validationState="warning"` */
.uitkFormField-warning {
}
