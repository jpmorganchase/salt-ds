.saltCircularProgress {
  --circularProgress-gradient-color: var(--salt-accent-background);
  --progress-circle-radius: calc(var(--salt-size-base) - (var(--salt-size-detail) * 0.25));
  --progress-circle-circumference: calc(var(--progress-circle-radius) * 2 * 3.14);

  color: var(--salt-text-primary-foreground);
  display: inline-flex;
  position: relative;
}

.saltCircularProgress-disabled .saltCircularProgress-progressValue,
.saltCircularProgress-disabled circle {
  color: var(--salt-text-primary-foreground-disabled);
  cursor: var(--salt-selectable-cursor-disabled);
}

.saltCircularProgress-circle {
  stroke: url("#salt-circular-progress-gradient");
}

.saltCircularProgress-progressValue {
  align-items: center;
  color: var(--salt-text-primary-foreground);
  display: flex;
  height: 100%;
  justify-content: center;
  left: 0;
  position: absolute;
  width: 100%;
}

.saltCircularProgress-disabled {}

.saltCircularProgress-completed {}

.saltCircularProgress-railCircle {
  stroke: var(--salt-track-borderColor);
  stroke-width: calc(var(--salt-size-basis-unit) * 0.5);
  r: calc(var(--salt-size-base) - (var(--salt-size-basis-unit) * 0.25));
}

.saltCircularProgress-gradientStart,
.saltCircularProgress-gradientStop {
  stop-color: var(--saltCircularProgress-gradient-color, var(--circularProgress-gradient-color));
}

.saltCircularProgress-container {
  display: inline-block;
}

.saltCircularProgress-determinate {
  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1) 0s;
}

.saltCircularProgress-svg {
  height: calc(var(--salt-size-base) * 2);
  width: calc(var(--salt-size-base) * 2);
  fill: var(--salt-accent-background);
  display: block;
}

.saltCircularProgress-circle {
  r: var(--progress-circle-radius);
  stroke-width: calc(var(--salt-size-detail) * 0.5);
  stroke: url("#salt-circular-progress-gradient");
}

.saltCircularProgress-circleDeterminate {
  transition: stroke-dashoffset 0.3s cubic-bezier(0.4, 0, 0.2, 1) 0s;
}

.saltCircularProgress-circleIndeterminate {
  stroke-dasharray: calc(var(--progress-circle-circumference) * 0.9), calc(var(--progress-circle-circumference) * 0.1);
  animation: circular-dash 1.4s linear infinite;
}

@keyframes circular-rotate {
  0% {
    transform-origin: 50% 50%;
  }

  100% {
    transform: rotate(360deg);
  }
}

@keyframes circular-dash {
  0% {
    stroke-dashoffset: 0;
  }
  50% {
    stroke-dashoffset: calc(var(--progress-circle-circumference) * -1);
    stroke-dasharray: calc(var(--progress-circle-circumference) * 0.1), calc(var(--progress-circle-circumference) * 0.9);
  }
  100% {
    stroke-dashoffset: calc(var(--progress-circle-circumference) * -2);
    stroke-dasharray: calc(var(--progress-circle-circumference) * 0.9), calc(var(--progress-circle-circumference) * 0.1);
  }
}