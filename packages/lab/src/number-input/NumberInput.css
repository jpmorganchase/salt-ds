/* Styles applied to number container */
.saltNumberInput {
  --numberInput-border: none;
  --numberInput-borderColor: var(--salt-editable-borderColor);
  --numberInput-borderStyle: var(--salt-editable-borderStyle);
  --numberInput-outlineColor: var(--salt-focused-outlineColor);
  --numberInput-borderWidth: var(--salt-size-border);

  align-items: center;
  color: var(--salt-content-primary-foreground);
  display: inline-flex;
  font-family: var(--salt-text-fontFamily);
  font-size: var(--salt-text-fontSize);
  height: var(--salt-size-base);
  line-height: var(--salt-text-lineHeight);
  min-height: var(--salt-size-base);
  min-width: 4em;
  width: 100%;
  box-sizing: border-box;

  gap: var(--salt-spacing-50);
}

.saltNumberInput:hover {
  --numberInput-borderStyle: var(--salt-editable-borderStyle-hover);
  --numberInput-borderColor: var(--salt-editable-borderColor-hover);

  background: var(--numberInput-background-hover);
  cursor: var(--salt-editable-cursor-hover);
}

.saltNumberInput:active {
  --numberInput-borderColor: var(--salt-editable-borderColor-active);
  --numberInput-borderStyle: var(--salt-editable-borderStyle-active);
  --numberInput-borderWidth: var(--salt-editable-borderWidth-active);

  background: var(--numberInput-background-active);
  cursor: var(--salt-editable-cursor-active);
}

.saltNumberInput-inputContainer {
  display: flex;
  background: var(--numberInput-background);
  border-radius: var(--salt-palette-corner-weak, 0);
  border: var(--numberInput-border);
  box-sizing: border-box;
  height: var(--salt-size-base);
  min-height: var(--salt-size-base);
  overflow: hidden;
  padding-left: var(--salt-spacing-100);
  padding-right: var(--salt-spacing-100);
  position: relative;
  flex-grow: 1;
}

/* Styling when focused */
.saltNumberInput-focused {
  outline:none;
}

/* Style applied if `readOnly={true}` */
.saltNumberInput-readOnly {
  --numberInput-borderColor: var(--salt-editable-borderColor-readonly);
  --numberInput-borderStyle: var(--salt-editable-borderStyle-readonly);
  --numberInput-borderWidth: var(--salt-size-border);

  background: var(--numberInput-background-readonly);
  cursor: var(--salt-editable-cursor-readonly);
}

/* Styling when focused if `disabled={true}` */
.saltNumberInput-focused.saltNumberInput-disabled {
  --numberInput-borderWidth: var(--salt-size-border);
  outline: none;
}

/* Styling when focused if `readOnly={true}` */
.saltNumberInput-focused.saltNumberInput-readOnly {
  --numberInput-borderWidth: var(--salt-size-border);
}

/* Style applied to selected input if `disabled={true}` */
.saltNumberInput-disabled .saltNumberInput-input::selection {
  background: none;
}

/* Style applied to input if `disabled={true}` */
.saltNumberInput-disabled,
.saltNumberInput-disabled:hover,
.saltNumberInput-disabled:active {
  --numberInput-borderColor: var(--salt-editable-borderColor-disabled);
  --numberInput-borderStyle: var(--salt-editable-borderStyle-disabled);
  --numberInput-borderWidth: var(--salt-size-border);

  background: var(--numberInput-background-disabled);
  cursor: var(--salt-editable-cursor-disabled);
  color: var(--saltNumberInput-color-disabled, var(--salt-content-primary-foreground-disabled));
}

/* Style applied if `bordered={true}` */
.saltNumberInput-bordered {
  --numberInput-border: var(--salt-size-border) var(--salt-container-borderStyle) var(--numberInput-borderColor);
  --numberInput-borderWidth: 0;
}

/* Style applied if focused or active when `bordered={true}` */
.saltNumberInput-bordered.saltNumberInput-focused,
.saltNumberInput-bordered:active {
  --numberInput-borderWidth: var(--salt-editable-borderWidth-active);
}

/* Styling when focused if `disabled={true}` or `readOnly={true}` when `bordered={true}` */
.saltNumberInput-bordered.saltNumberInput-readOnly,
.saltNumberInput-bordered.saltNumberInput-disabled:hover {
  --numberInput-borderWidth: 0;
}

/* --- Buttons --- */

/* Styles applied to number buttons container */
.saltNumberInput-buttonContainer {
  --numberInput-buttonGap: var(--salt-size-border-strong);
  display: flex;
  flex-direction: column;
  gap: var(--numberInput-buttonGap);
}

/* Styles applied to number buttons */
.saltNumberInput-numberButton {
  --saltButton-height: calc((var(--salt-size-base) - var(--numberInput-buttonGap)) * 0.5);
  --saltButton-width: var(--salt-size-base);
}

.saltNumberInput-numberButtonIncrement {
  --saltButton-borderRadius: var(--salt-palette-corner-weak, 0) var(--salt-palette-corner-weak, 0) 0 0;
}
.saltNumberInput-numberButtonDecrement {
  --saltButton-borderRadius: 0 0 var(--salt-palette-corner-weak, 0) var(--salt-palette-corner-weak, 0);
}
