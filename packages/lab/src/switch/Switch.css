/* Styles applied to root element */
.uitk-density-touch {
  --switch-width: 44px;
  --switch-thumb-margin: 3px 0 0 3px;
  --switch-thumb-size: 18px;
  --switch-thumb-translate: 20px;
}

.uitk-density-low {
  --switch-width: 38px;
  --switch-thumb-margin: 2px 0 0 2px;
  --switch-thumb-size: 16px;
  --switch-thumb-translate: 18px;
}

.uitk-density-medium {
  --switch-width: 34px;
  --switch-thumb-margin: 2px 0 0 2px;
  --switch-thumb-size: 14px;
  --switch-thumb-translate: 16px;
}

.uitk-density-high {
  --switch-width: 30px;
  --switch-thumb-margin: 2px 0 0 2px;
  --switch-thumb-size: 12px;
  --switch-thumb-translate: 14px;
}

.uitkSwitch {
  --switch-label-color: var(--uitk-text-secondary-foreground);
  --switch-thumb-background: var(--uitk-container-background-medium);
  --switch-track-color: var(--uitk-selectable-borderColor);
  --switch-track-color-hover: var(--uitk-selectable-borderColor-hover);
  --switch-track-color-checked: var(--uitk-selectable-background-selected);
  --switch-tick-color: var(--uitk-selectable-background-selected);
}

.uitkSwitch {
  box-sizing: content-box;
  display: inline-flex;
  flex-shrink: 0;
  height: var(--uitkSwitch-height, var(--uitk-size-switch));
  margin-left: 0;
  overflow: visible;
  padding: 0;
  position: relative;
  vertical-align: middle;
  width: var(--uitkSwitch-width, var(--switch-width));
  z-index: 0;
}

/* Styles applied to outer ControlLabel component */
.uitkSwitch-label {
  position: relative;
  margin-left: 0;
  margin-right: 0;
  vertical-align: middle;
}

/* Styles applied to outer ControlLabel component's text */
.uitkSwitch-label .uitkControlLabel-text {
  color: var(--uitkSwitch-label-color, var(--switch-label-color));
  line-height: var(--uitkSwitch-label-line-height, var(--uitk-text-lineHeight));
  text-align: right;
}

/* Styles applied to track on hover if `disabled={false}` */
.uitkSwitch-label:hover:not(.uitkSwitch-disabled) .uitkSwitch-track {
  background-color: var(--uitkSwitch-track-color-hover, var(--switch-track-color-hover));
}

/* Styles applied to base */
.uitkSwitch-base {
  background: transparent;
  display: inline-flex;
  flex: 0 0 auto;
  height: var(--uitkSwitch-base-height, var(--switch-thumb-size));
  justify-content: flex-start;
  margin: var(--uitkSwitch-base-margin, var(--switch-thumb-margin));
  overflow: visible;
  padding: 0;
  position: absolute;
  text-align: center;
  transition: left 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, transform 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  width: var(--uitkSwitch-base-width, var(--switch-thumb-size));
  z-index: var(--uitk-zindex-default);
}

/* Styles applied to track */
.uitkSwitch-track {
  background: var(--uitkSwitch-track-color, var(--switch-track-color));
  border-radius: var(--uitkSwitch-track-borderRadius, 0);
  box-sizing: border-box;
  height: var(--uitkSwitch-track-height, var(--uitk-size-switch));
  min-height: var(--uitkSwitch-track-minHeight, 16px);
  margin-top: 0;
  margin-left: 0;
  opacity: 1;
  position: absolute;
  transition: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  transform: var(--uitkSwitch-track-transform, none);
  width: var(--uitkSwitch-track-width, var(--switch-width));
  z-index: -1;
}

/* Styles applied to input element and icon container */
.uitkSwitch-inputContainer {
  align-items: inherit;
  display: flex;
  justify-content: inherit;
  transform: translateX(var(--uitkSwitch-inputContainer-translate-x, 0px));
  transition: transform 0.15s;
  width: 100%;
}

/* Styles applied to input element */
.uitkSwitch-input {
  cursor: inherit;
  height: 100%;
  left: -100%;
  margin: 0;
  opacity: 0;
  padding: 0;
  position: absolute;
  top: 0;
  width: 100%;
  z-index: var(--uitk-zindex-default);
}

/* Styles applied to thumb, and icon if `checked={true}` */
.uitkSwitch-thumb,
.uitkSwitch-checked .uitkSwitch-icon {
  background: var(--uitkSwitch-thumb-background, var(--switch-thumb-background));
  border-radius: var(--uitkSwitch-thumb-borderRadius, 0);
  border: var(--uitkSwitch-thumb-border, none);
  box-shadow: none;
  width: var(--uitkSwitch-thumb-width, var(--switch-thumb-size));
  height: var(--uitkSwitch-thumb-height, var(--switch-thumb-size));
  fill: var(--uitkSwitch-thumb-background, var(--switch-thumb-background));
  outline: 1px solid transparent;
}

/* Styles applied to base if `checked={true}` */
.uitkSwitch-base.uitkSwitch-checked {
  transform: none;
}

/* Styles applied to input container if `checked={true}` */
.uitkSwitch-base.uitkSwitch-checked .uitkSwitch-inputContainer {
  transform: translateX(var(--uitkSwitch-thumb-translate, var(--switch-thumb-translate)));
}

/* Styles applied to tracks where `checked={true}` */
.uitkSwitch-base.uitkSwitch-checked + .uitkSwitch-track {
  background: var(--uitkSwitch-track-color-checked, var(--switch-track-color-checked));
  border: var(--uitkSwitch-track-border-checked, 1px solid var(--switch-track-color-checked));
}

/* Styles applied to icon tick shown when `checked={true}` */
.uitkSwitch-iconTick {
  fill: var(--uitkSwitch-icon-color-checked, var(--switch-tick-color));
}

/* Styles applied to icon tick shown when `checked={true}` and `disabled={true}` */
.uitkSwitch-disabled .uitkSwitch-iconTick {
  opacity: var(--uitk-opacity-foreground);
}

/* Styles applied when `focusVisible={true}` */
.uitkSwitch-focusVisible:before {
  background: transparent;
  content: "";
  display: block;
  height: var(--uitkSwitch-focused-height, var(--uitk-size-switch));
  left: var(--uitkSwitch-focused-left, -2px);
  outline-style: var(--uitkSwitch-focused-outlineStyle, var(--uitk-focused-outlineStyle));
  outline-width: var(--uitkSwitch-focused-outlineWidth, var(--uitk-focused-outlineWidth));
  outline-color: var(--uitkSwitch-focused-outlineColor, var(--uitk-focused-outlineColor));
  outline-offset: var(--uitkSwitch-focused-outlineOffset, var(--uitk-focused-outlineOffset));
  position: absolute;
  top: var(--uitkSwitch-focused-top, -2px);
  width: var(--uitkSwitch-focused-width, var(--switch-width));
}

/* Styles applied to tracks when `focusVisible={true}` */
.uitkSwitch-focusVisible + .uitkSwitch-track {
  background: var(--uitkSwitch-track-color-hover, var(--switch-track-color-hover));
}

/* Styles applied to track if `disabled={true}` */
.uitkSwitch-disabled .uitkSwitch-track,
.uitkSwitch-disabled:hover .uitkSwitch-track {
  opacity: var(--uitk-opacity-background);
}

/* Styles applied to thumb and icon if `disabled={true}`  */
.uitkSwitch-disabled .uitkSwitch-thumb,
.uitkSwitch-disabled:hover .uitkSwitch-thumb,
.uitkSwitch-disabled .uitkSwitch-checked .uitkSwitch-icon,
.uitkSwitch-disabled:hover .uitkSwitch-checked .uitkSwitch-icon {
  opacity: var(--uitk-opacity-background);
}

.uitkSwitch-disabled,
.uitkSwitch-disabled:hover {
  --switch-thumb-background: var(--uitk-selectable-foreground-selectedDisabled);
}
