/* Styles applied to root component (TokenizedInput) */
.uitk-density-medium .uitkTokenizedInput {
  --tokenized-input-gutter-size: var(--uitk-size-basis-unit);
  --tokenized-input-pill-group-y-padding: calc(var(--uitk-size-unit) / 2);
  --tokenized-input-last-pill-margin: var(--uitk-size-unit);
}
.uitk-density-touch .uitkTokenizedInput {
  --tokenized-input-gutter-size: var(--uitk-size-basis-unit);
  --tokenized-input-pill-group-y-padding: calc(var(--uitk-size-unit) / 2 + 2px);
  --tokenized-input-last-pill-margin: calc(var(--uitk-size-unit) / 2);
}

.uitk-density-low .uitkTokenizedInput {
  --tokenized-input-gutter-size: var(--uitk-size-basis-unit);
  --tokenized-input-pill-group-y-padding: calc(var(--uitk-size-unit) / 2 + 1px);
  --tokenized-input-last-pill-margin: calc(var(--uitk-size-unit) / 2);
}

.uitk-density-high .uitkTokenizedInput {
  --tokenized-input-gutter-size: calc(var(--uitk-size-basis-unit) - 1px);
  --tokenized-input-pill-group-y-padding: calc(var(--uitk-size-unit) / 2 + 1px);
  --tokenized-input-last-pill-margin: var(--uitk-size-unit);
}

.uitkTokenizedInput {
  --tokenized-input-spacing: var(--uitk-size-unit);
  --tokenized-input-height: var(--uitk-size-base);
  --tokenized-input-focused-outline: var(--uitk-focused-outline);
}

.uitkTokenizedInput {
  display: inline-flex;
  justify-content: space-between;
  min-width: 8em; /* same min-width as Input component */
  width: 100%;
}

/* Styles applied to root component on hover state when `disabled={false}` */
.uitkTokenizedInput:hover:not(.uitkTokenizedInput-disabled) {
  cursor: pointer;
}

/* Styles applied to container of pills */
.uitkTokenizedInput-pillGroup {
  align-content: flex-start;
  box-sizing: border-box;
  display: flex;
  flex: 1;
  flex-wrap: wrap;
  min-height: var(--tokenized-input-height);
  padding: var(--tokenized-input-pill-group-y-padding) var(--tokenized-input-spacing);
}

/* Styles applied to root component if `disabled={true}` */
.uitkTokenizedInput-disabled {
  cursor: var(--uitk-editable-cursor-disabled);
  opacity: var(--uitkTokenizedInput-disabled-opacity, var(--uitk-opacity-foreground));
}

/* Styles applied to root component if `focused={true}` */
.uitkTokenizedInput-focused {
  outline: var(--uitkTokenizedInput-focused-outline, var(--tokenized-input-focused-outline));
}

/* Styles applied to root component if `expanded={true}` */
.uitkTokenizedInput-expanded {
  height: auto;

  /* Pill CSS API */
  --uitkPill-maxWidth: calc(100px - var(--uitk-size-unit));
}

/* Styles applied to Input and Clear Button if `expanded={false}` */
.uitkTokenizedInput-hidden {
  display: none;
}

/** 
  Styles applied to inner Input component
  Used to be .inputRoot 
**/
.uitkTokenizedInput-input {
  align-items: flex-start;
  cursor: text;
  flex-grow: 1;
  padding: 0;
  outline: none;
  width: auto;
  height: auto;
  min-width: 0;
  min-height: 0;
}

/* Styles applied to Clear Button  */
.uitkTokenizedInput-clearButton {
  flex: none;
  align-self: flex-end;
}

/* Styles applied to Expand Button  */
.uitkTokenizedInput-expandButton {
  padding: 0 calc(var(--tokenized-input-spacing) / 4);
}

/* Styles applied to root component and pill container if `expanded={true}` */
.uitkTokenizedInput-expanded,
.uitkTokenizedInput-expanded .uitkTokenizedInput-pillGroup {
  height: auto;
}

/* TODO: Adjust specificity of .InputPill depending on styling solution. 
  This is an example of internal sub-component naming convension. */
.uitkTokenizedInput .uitkInputPill,
.uitkTokenizedInput-expandButton,
.uitkTokenizedInput-input,
.uitkTokenizedInput-inputField.uitkTokenizedInput-inputMultiline .uitkTokenizedInput-input {
  margin: calc(var(--tokenized-input-gutter-size) / 2) 0;
  height: calc(var(--tokenized-input-height) - var(--tokenized-input-spacing) * 1.5);
}

/* Styles applied to inner Pills */
.uitkTokenizedInput .uitkInputPill {
  min-width: 0;
  margin-right: var(--tokenized-input-gutter-size);
  --uitkPill-maxWidth: 100px;
}

.uitkTokenizedInput .uitkInputPill > * {
  min-width: 0;
}

/* Styles applied to a Pill if `expanded={false} && index >= firstHiddenIndex` */
.uitkTokenizedInput .uitkInputPill.uitkInputPill-hidden {
  display: none;
}

/* Styles applied to the last visible Pill when all visible */
.uitkTokenizedInput .uitkInputPill-pillLastVisible {
  margin-right: var(--uitkTokenizedInput-pill-last-visible-margin-right, var(--tokenized-input-last-pill-margin));
}

/* Styles applied to a Pill when active */
.uitkTokenizedInput .uitkInputPill-pillActive {
  background: var(--uitkTokenizedInput-pill-background-active, var(--uitk-selectable-background-hover));
}

/* Styles applied to a Pills delete icon */
.uitkTokenizedInput .uitkInputPill-pillActive .uitkPill-deleteIcon {
  color: var(--uitkTokenizedInput-pill-delete-icon-color, var(--uitk-actionable-cta-foreground-hover));
}

/* Styles applied to a Pills delete button */
.uitkTokenizedInput .uitkInputPill-pillActive .uitkPill-deleteButton {
  color: var(--uitkTokenizedInput-pill-delete-button-color-active, var(--uitk-actionable-cta-foreground-hover));
  background: var(--uitkTokenizedInput-pill-delete-button-background-active, var(--uitk-actionable-cta-background-hover));
}
